<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context.xsd">
	
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
	    <property name="securityManager" ref="securityManager"/>
	    <property name="loginUrl" value="/xitech/login"/>
	    <property name="successUrl" value="/xitech/index"/>
	    <property name="filters">
        	<map>
	            <!-- <entry key="casFilter" value-ref="casFilter"/> -->
				<!-- <entry key="authc" value-ref="casFilter"/> -->
	        </map>
	    </property>
	    <property name="filterChainDefinitions">
	        <value>
				/xitech/login=anon
				/resources/** = anon
				/xitech/index=anon
				/**=authc
	        </value>
	    </property>
	</bean>

	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
	    <!-- Single realm app.  If you have multiple realms, use the 'realms' property instead. -->
	    <property name="realm" ref="myRealm"/>
	    <property name="sessionManager" ref="sessionManager"/>
		<!-- <property name="cacheManager" ref="cacheManager"/> -->
	</bean>
	
	<bean id="myRealm" class="com.xitech.web.shiro.realm.XitechWebRealm">
		<property name="credentialsMatcher" ref="credentialsMatcher"/>
	</bean>
	
	<bean id="credentialsMatcher" class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
		<property name="hashAlgorithmName" value="md5"/>
	</bean>

    <!-- 设置SecurityUtils，相当于调用SecurityUtils.setSecurityManager(securityManager) -->
    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod" value="org.apache.shiro.SecurityUtils.setSecurityManager"/>
        <property name="arguments" ref="securityManager"/>
    </bean>

    <!-- 开启Shiro Spring AOP权限注解@RequiresPermissions的支持 -->
    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor"/>
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>

    <!-- Shiro生命周期处理器-->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>




	<!-- session  -->
	<bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
		<property name="sessionIdCookieEnabled" value="true"/>
		<property name="sessionIdCookie" ref="sessionIdCookie"></property>
		<property name="globalSessionTimeout" value="300000"/> <!-- 1分钟  -->
		<property name="sessionDAO" ref="xitechSessionDAO"/>
		<property name="sessionValidationInterval" value="6000"/>
 		<property name="sessionValidationSchedulerEnabled" value="true"/>
		<property name="sessionListeners">
			<list>
				<ref bean="xitechSessionListener"/>
			</list>
		</property>
	</bean>
	<!-- <bean id="xitechSessionDAO" class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO">
		<property name="activeSessionsCacheName" value = "xitech-activeSessionCache"/>
	</bean> -->
	<bean id="xitechSessionDAO" class="com.xitech.web.session.dao.XitechSessionDao">
		
	</bean>
	<!-- <property name="activeSessionsCacheName" value = "xitech-activeSessionCache"/> -->
	<bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
		<property name="name" value="sid"/>
		<property name="maxAge" value="300"/>
		<property name="httpOnly" value="true"/>
	</bean>
	<bean id="xitechSessionListener" class="com.xitech.web.shiro.listener.XitechSessionListener">
	</bean>
	
	<!-- cache  -->
	<!-- <bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
		<property name="cacheManagerConfigFile" value="classpath:config/ehcache.xml"/>
	</bean> -->


</beans>